name: Deploy-FrontEnd
on:
  push:
    branches:
      - SOM-67-Create-sample-static-webapp-and-deploy-to-Azure
    paths:
      - src/frontend/**
  workflow_dispatch:

env:
  NODE_VERSION: '18.x'
  AZURE_WEBAPP_NAME: 'web-someroc-FrontEnd-dev'
  AZURE_WEBAPP_PACKAGE_PATH: src/frontend
  CI: false

# gh workflow run deploy-frontend.yml --ref SOM-67-Create-sample-static-webapp-and-deploy-to-Azure

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    steps:

    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v3

    - name: Login via Azure CLI
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS_DEV }}

    - name: Setup Node ${{ env.NODE_VERSION }} Environment
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: 'Resolve Project Dependencies Using Npm'
      shell: bash # For Linux, use bash
      run: |
        npm install
        npm run build --passWithNoTests
        npm run test --passWithNoTests
      working-directory: src/frontend
      continue-on-error: true

    # deploy web app using Azure credentials
    - uses: azure/webapps-deploy@v2.2.6
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        package: "src/frontend/build"
        resource-group-name: "rg-someroc-frontEnd-dev"
        startup-command: "pm2 serve /home/site/wwwroot --no-daemon --spa"

    - name: Azure App Service Settings
      uses: Azure/appservice-settings@v1
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        app-settings-json: "src/frontend/app-settings.json"

    # Azure logout
    - name: logout
      run: |
        az logout



  # uses: Azure/webapps-deploy@v2.2.6
  # with:
  #   # Name of the Azure Web App
  #   app-name:
  #   # Applies to Web Apps(Windows and Linux) and Web App Containers(linux). Multi container scenario not supported. Publish profile (*.publishsettings) file contents with Web Deploy secrets
  #   publish-profile: # optional
  #   # Enter an existing Slot other than the Production slot
  #   slot-name: # optional, default is production
  #   # Applies to Web App only: Path to package or folder. *.zip, *.war, *.jar or a folder to deploy
  #   package: # optional, default is .
  #   # Applies to Web App Containers only: Specify the fully qualified container image(s) name. For example, 'myregistry.azurecr.io/nginx:latest' or 'python:3.7.2-alpine/'. For multi-container scenario multiple container image names can be provided (multi-line separated)
  #   images:
  #   # Applies to Web App Containers only: Path of the Docker-Compose file. Should be a fully qualified path or relative to the default working directory. Required for multi-container scenario
  #   configuration-file: # optional
  #   # Enter the start up command. For ex. dotnet run or dotnet run
  #   startup-command: # optional
  #   # Enter the resource group name of the web app
  #   resource-group-name: # optional