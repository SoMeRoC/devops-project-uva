name: Deploy SQL to Azure SQL

on:
  workflow_dispatch:

# gh workflow run depoloy-sql-tables.yml --ref dev

defaults:
  run:
    working-directory: 'infrastructure/sql'

env:
  KEY_VAULT_NAME: 'kv-someroc-shared-dev'
  SHARED_RG: 'rg-someroc-shared-dev'
  SQL_SERVER_NAME: 'sql-someroc-shared-dev'
  DB_NAME: 'sqldb-game-dev'

jobs:
  deploy_sql:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Azure CLI script
      uses: azure/CLI@v1
      id: secret
      with:
        azcliversion: 2.46.0
        inlineScript: |
          $val=$(az keyvault secret show --name 'dbroot' --vault-name "${{ env.KEY_VAULT_NAME }}")
          secret_value=$(echo $val | jq -r '.value')
          echo "DBPASS=$secret_value" >> $GITHUB_OUTPUT

          runner_ip=$(curl -s https://api.ipify.org)
          echo $runner_ip

          # Add a firewall rule to allow the GitHub runner's IP address
          az sql server firewall-rule create --resource-group "${{ env.SHARED_RG }}" --server "${{ env.SQL_SERVER_NAME }}" --name "GitHub Runner" --start-ip-address $runner_ip --end-ip-address $runner_ip
      # - name: Azure SQL Deploy
      #   uses: Azure/sql-action@v2.1
      #   with:
      #     # The connection string, including authentication information, for the Azure SQL Server database.
      #     connection-string:
      #     # Path to the file used for this action. Supported file types are .sql, .dacpac, or .sqlproj.
      #     path:
      #     # If not using a .sql file, the sqlpackage action to execute.
      #     action: # optional
      #     # In case of .dacpac or .sqlproj file types, additional sqlpackage arguments that will be applied. In case of .sql file type, additional go-sqlcmd argument that will be applied.
      #     arguments: # optional
      #     # In case of a .sqlproj file, additional arguments that will be applied to dotnet build when building the database project.
      #     build-arguments: # optional
    - name: Deploy SQL file
      run: |
        server="${{ env.SQL_SERVER_NAME }}"
        db="${{ env.DB_NAME }}"
        sqlcmd -S ${server}.database.windows.net -d <your-database> -U 'dbroot' -P "${{ steps.secret.outputs.DBPASS }}" -i gameDb-table-scheme.sql

    - name: Azure CLI script
      if: always()
      uses: azure/CLI@v1
      with:
        azcliversion: 2.46.0
        inlineScript: |
          runner_ip=$(curl -s https://api.ipify.org)
          echo $runner_ip

          # Remove the firewall rule when finished
          az sql server firewall-rule delete --resource-group "${{ env.SHARED_RG }}" --server "${{ env.SQL_SERVER_NAME }}" --name "GitHub Runner"