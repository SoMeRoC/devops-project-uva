openapi: 3.0.0
info:
  title: Simple Inventory API
  description: This is a simple API
  contact:
    email: you@your-company.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: http://func.localhost
  description: Local az func fancy routing
- url: http://localhost:7071
  description: Local az func
paths:
  /api/matchHistory:
    get:
      summary: Gets a match or all matches from a player
      parameters:
      - name: gameId
        in: query
        required: false
        schema:
          type: number
          format: integer
      - name: uid
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: "success"

    post:
      summary: Create match history
      requestBody:
        description: Match object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Match'
      responses:
        "200":
          description: "success"
          # content:
          #   application/json:
          #     schema:
          #       $ref: '#/components/schemas/Student'

components:
  schemas:
    Match:
      required:
      - winner
      - rated
      type: object
      properties:
        winner:
          type: string
        rated:
          type: boolean
        players:
          type: array
          items:
            $ref: '#/components/schemas/MatchPlayer'
        rounds:
          type: array
          items:
            $ref: '#/components/schemas/MatchRound'
      example:
        winner: 'b'
        rated: true
        players:
        - role: 'w'
          uid: 'player1UID'
        - role: 'b'
          uid: 'player2UID'
        rounds:
        - round: 1
          winner: 'b'
        - round: 2
          winner: 'w'

    MatchPlayer:
      required:
      - role
      - uid
      type: object
      properties:
        role:
          type: string
        uid:
          type: string
      example:
        role: 'w'
        uid: 'player1UID'

    MatchRound:
      required:
      - round
      - winner
      type: object
      properties:
        round:
          type: number
          format: integer
        winner:
          type: string
      example:
        round: 1
        winner: b
  #   Student:
  #     required:
  #     - first_name
  #     - last_name
  #     type: object
  #     properties:
  #       student_id:
  #         type: number
  #         format: integer
  #       first_name:
  #         type: string
  #       last_name:
  #         type: string
  #         example: Coltof
  #       gradeRecords:
  #         type: array
  #         items:
  #           $ref: '#/components/schemas/GradeRecord'
  #     example:
  #       first_name: Quinten
  #       last_name: Coltof
  #       gradeRecord:
  #       - 8
  #       - 9
  #       - 10
  #   GradeRecord:
  #     required:
  #     - grade
  #     - subject_name
  #     type: object
  #     properties:
  #       subject_name:
  #         type: string
  #       grade:
  #         maximum: 10
  #         minimum: 0
  #         type: number
  #         format: float
  #     example:
  #       subject_name: Quinten Coltof
  #       grade: 10

